Script started on Wed 10 Feb 2016 09:07:29 PM PST
bash-4.2$ mk list2.c
CSOURCE=list1.c EXECBIN=list1
+ cid + list1.c
+ checksource list1.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 list1.c -o list1 -lm
+ tee list1.c.log
list1.c: In function ‘main’:
list1.c:15:7: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
       node *node = malloc (sizeof (struct node));
       ^
list1.c:15:20: warning: incompatible implicit declaration of built-in function ‘malloc’
       node *node = malloc (sizeof (struct node));
                    ^
list1.c:12:15: warning: unused parameter ‘argc’ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
+ set +x
============================================================
CSOURCE=list2.c EXECBIN=list2
+ cid + list2.c
+ checksource list2.c
+ tee list2.c.log
+ gcc -g -O0 -Wall -Wextra -std=gnu99 list2.c -o list2 -lm
list2.c: In function ‘main’:
list2.c:14:15: warning: unused parameter ‘argc’ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
+ set +x
============================================================
CSOURCE=malloc.c EXECBIN=malloc
+ cid + malloc.c
+ checksource malloc.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 malloc.c -o malloc -lm
+ tee malloc.c.log
malloc.c: In function ‘main’:
malloc.c:12:15: warning: unused parameter ‘argc’ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
malloc.c:12:28: warning: unused parameter ‘argv’ [-Wunused-parameter]
 int main (int argc, char **argv) {
                            ^
+ set +x
============================================================
CSOURCE=uninit.c EXECBIN=uninit
+ cid + uninit.c
+ checksource uninit.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 uninit.c -o uninit -lm
+ tee uninit.c.log
uninit.c: In function ‘main’:
uninit.c:6:15: warning: unused parameter ‘argc’ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
uninit.c:6:28: warning: unused parameter ‘argv’ [-Wunused-parameter]
 int main (int argc, char **argv) {
                            ^
uninit.c:8:4: warning: ‘pointer’ is used uninitialized in this function [-Wuninitialized]
    printf ("pointer=%p\n", pointer);
    ^
uninit.c:11:4: warning: ‘foo’ is used uninitialized in this function [-Wuninitialized]
    printf ("foo=%d\n", foo);
    ^
+ set +x
============================================================
bash-4.2$ valgrind list2 foo bar
==4701== Memcheck, a memory error detector
==4701== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==4701== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==4701== Command: list2 foo bar
==4701== 
0x54f81c0->node {word=0xffefffd5d->[MANPATH=/opt/rh/devtoolset-3/root/usr/share/man:/opt/rh/rh-java-common/root/usr/share/man::/var/cfengine/share/man], link=0x54f8160}
0x54f8160->node {word=(nil)->[(null)], link=0x54f8100}
0x54f8100->node {word=0xffefffd59->[bar], link=0x54f80a0}
0x54f80a0->node {word=0xffefffd55->[foo], link=0x54f8040}
==4701== Conditional jump or move depends on uninitialised value(s)
==4701==    at 0x400748: main (list2.c:23)
==4701== 
==4701== 
==4701== HEAP SUMMARY:
==4701==     in use at exit: 120 bytes in 5 blocks
==4701==   total heap usage: 5 allocs, 0 frees, 120 bytes allocated
==4701== 
==4701== LEAK SUMMARY:
==4701==    definitely lost: 24 bytes in 1 blocks
==4701==    indirectly lost: 96 bytes in 4 blocks
==4701==      possibly lost: 0 bytes in 0 blocks
==4701==    still reachable: 0 bytes in 0 blocks
==4701==         suppressed: 0 bytes in 0 blocks
==4701== Rerun with --leak-check=full to see details of leaked memory
==4701== 
==4701== For counts of detected and suppressed errors, rerun with: -v
==4701== Use --track-origins=yes to see where uninitialised values come from
==4701== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 1 from 1)
bash-4.2$ gdb list2
GNU gdb (GDB) Red Hat Enterprise Linux 7.8.2-38.el7
Copyright (C) 2
