head	1.24;
access;
symbols;
locks;
comment	@ * @;


1.24
date	2014.04.16.01.40.30;	author -;	state -;
branches;
next	1.23;

1.23
date	2014.04.16.01.39.25;	author -;	state -;
branches;
next	1.22;

1.22
date	2014.04.16.01.36.45;	author -;	state -;
branches;
next	1.21;

1.21
date	2014.04.16.01.35.57;	author -;	state -;
branches;
next	1.20;

1.20
date	2014.04.16.01.29.43;	author -;	state -;
branches;
next	1.19;

1.19
date	2014.04.16.01.27.25;	author -;	state -;
branches;
next	1.18;

1.18
date	2014.04.16.01.26.57;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.04.16.01.25.17;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.04.16.01.23.42;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.04.16.01.22.12;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.04.16.01.18.14;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.04.16.01.17.40;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.04.16.01.16.54;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.09.25.21.47.21;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.09.25.21.43.34;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.09.25.21.43.03;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.09.25.21.40.36;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.09.25.21.38.21;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.09.25.21.35.16;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.09.25.20.19.50;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.09.25.20.19.33;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.09.25.20.19.05;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.09.25.20.18.53;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.01.24.23.18.07;	author -;	state -;
branches;
next	;


desc
@@


1.24
log
@-
@
text
@// $Id: segfault.c,v 1.23 2014-04-15 18:39:25-07 - - $

// Illustrate a segfault.

#include <stdio.h>

int main (int argc, char **argv) {
   (void) argc; // warning: unused parameter 'argc' [-Wunused-parameter]
   for (int i = 0;; ++i) {
      printf ("argv[%d]=\"%s\"\n", i, argv[i]);
      fflush (NULL);
   }
}

/*
//TEST// env -i FOO=value1 BAR=value2 \
//TEST//    valgrind --leak-check=full --show-reachable=yes \
//TEST//       ./segfault arg1 arg2 >segfault.out 2>segfault.err
//TEST// for file in segfault.out segfault.err; do
//TEST//    more $file </dev/null; echo ""
//TEST// done >segfault.lis
//TEST// rm segfault.out segfault.err
//TEST// mkpspdf segfault.ps segfault.c* segfault.lis
*/

@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.22 2014-04-15 18:36:45-07 - - $
d19 3
a21 1
//TEST// for file in segfault.out segfault.err; do more $file </dev/null; echo [EOF]; done >segfault.lis
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.21 2014-04-15 18:35:57-07 - - $
d19 1
a19 1
//TEST// more segfault.out segfault.err </dev/null >segfault.lis
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.20 2014-04-15 18:29:43-07 - - $
d16 4
a19 4
//TEST// (env -i FOO=value1 BAR=value2 \
//TEST//     valgrind --leak-check=full --show-reachable=yes \
//TEST//        ./segfault arg1 arg2 >segfault.out 2>segfault.err)
//TEST// more segfault.out segfault.err >segfault.lis
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.19 2014-04-15 18:27:25-07 - - $
d16 3
a18 3
//TEST// env -i FOO=value1 BAR=value2 \
//TEST//    valgrind --leak-check=full --show-reachable=yes \
//TEST//       ./segfault arg1 arg2 >segfault.out 2>segfault.err
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.17 2014-04-15 18:25:17-07 - - $
d18 3
a20 1
//TEST//       ./segfault arg1 arg2 >segfault.lis 2>&1
@


1.18
log
@-
@
text
@d10 1
a10 2
      printf ("argv[%d]=\"", i);
      printf ("%s\"\n", argv[i]);
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.16 2014-04-15 18:23:42-07 - - $
d10 2
a11 1
      printf ("argv[%d]=\"%s\"\n", i, argv[i]);
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.15 2014-04-15 18:22:12-07 - - $
d15 4
a18 2
//TEST// grind='valgrind --leak-check=full --show-reachable=yes'
//TEST// env -i FOO=value1 BAR=value2 $grind ./segfault >segfault.lis 2>&1
d20 1
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.14 2014-04-15 18:18:14-07 - - $
d16 1
a16 1
//TEST// env -i FOO=value1 BAR=value2 $grind segfault >segfault.lis 2>&1
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.13 2014-04-15 18:17:40-07 - - $
d15 2
a16 2
//TEST// alias grind='valgrind --leak-check=full --show-reachable=yes'
//TEST// grind segfault >segfault.lis 2>&1
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.12 2014-04-15 18:16:54-07 - - $
d16 1
a16 1
//TEST// env -i FOO=value1 BAR=value2 grind segfault >segfault.lis 2>&1
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.11 2013-09-25 14:47:21-07 - - $
d8 1
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.10 2013-09-25 14:43:34-07 - - $
d14 2
a15 4
/*
//TEST// env -i FOO=value1 BAR=value2 \
//TEST// PATH=/bin:/afs/cats.ucsc.edu/courses/cmps012b-wm/bin \
//TEST// runprog -x segfault.lis ./segfault
a16 1
*/
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.9 2013-09-25 14:43:03-07 - - $
d10 1
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.8 2013-09-25 14:40:36-07 - - $
d15 1
a15 1
//TEST// PATH=/afs/cats.ucsc.edu/courses/cmps012b-wm/bin \
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.7 2013-09-25 14:38:21-07 - - $
d13 4
a16 1
//TEST// env -i FOO=value1 BAR=value2 runprog -x segfault.lis ./segfault
d18 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.6 2013-09-25 14:35:16-07 - - $
d13 1
a13 1
//TEST// runprog -x segfault.lis env -i FOO=value1 BAR=value2 ./segfault
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.5 2013-09-25 13:19:50-07 - - $
d13 1
a13 1
//TEST// runprog -x segfault.lis ./segfault
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.4 2013-09-25 13:19:33-07 - - $
d12 4
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.3 2013-09-25 13:19:05-07 - - $
d9 1
a9 1
      printf ("argv[%d]=\"%s\"\n", argv[i]);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.2 2013-09-25 13:18:53-07 - - $
d7 1
a7 1
int main (int, char **argv) {
d9 1
a9 1
      printf ("%s\n", argv[i]);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: segfault.c,v 1.1 2013-01-24 15:18:07-08 - - $
d7 1
a7 1
int main (int argc, char **argv) {
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d5 2
@
