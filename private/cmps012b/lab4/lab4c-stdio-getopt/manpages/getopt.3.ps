%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Tue Jan 12 17:31:01 2016
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.22 2
%%Pages: 6
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(GET)72 48 Q 123.64(OPT\(3\) Linux)-.18 F
(Programmer')2.5 E 2.5(sM)-.55 G 123.64(anual GET)-2.5 F(OPT\(3\))-.18 E
/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E F0
(getopt, getopt_long, getopt_long_only)108 96 Q 2.5(,o)-.65 G(ptar)-2.5
E(g, optind, opterr)-.18 E 2.5(,o)-.4 G(ptopt \255 P)-2.5 E
(arse command-line options)-.15 E F1(SYNOPSIS)72 112.8 Q/F2 10
/Times-Bold@0 SF(#include <unistd.h>)108 124.8 Q(int getopt\(int)108
148.8 Q/F3 10/Times-Italic@0 SF(ar)2.83 E(gc)-.37 E F2 2.5(,c).31 G
(har * const)-2.5 E F3(ar)2.83 E(gv[])-.37 E F2(,).43 E(const char *)
135.5 160.8 Q F3(optstring).23 E F2(\);).22 E(exter)108 184.8 Q 2.5(nc)
-.15 G(har *)-2.5 E F3(optar).23 E(g)-.37 E F2(;).22 E(exter)108 196.8 Q
2.5(ni)-.15 G(nt)-2.5 E F3(optind)2.73 E F2(,).77 E F3(opterr)2.73 E F2
(,).73 E F3(optopt)2.73 E F2(;).68 E(#include <getopt.h>)108 220.8 Q
(int getopt_long\(int)108 244.8 Q F3(ar)2.83 E(gc)-.37 E F2 2.5(,c).31 G
(har * const)-2.5 E F3(ar)2.83 E(gv[])-.37 E F2(,).43 E(const char *)
135.5 256.8 Q F3(optstring).23 E F2(,).22 E(const struct option *)135.5
268.8 Q F3(longopts).09 E F2 2.5(,i).27 G(nt *)-2.5 E F3(longinde).09 E
(x)-.2 E F2(\);).53 E(int getopt_long_only\(int)108 292.8 Q F3(ar)2.83 E
(gc)-.37 E F2 2.5(,c).31 G(har * const)-2.5 E F3(ar)2.83 E(gv[])-.37 E
F2(,).43 E(const char *)135.5 304.8 Q F3(optstring).23 E F2(,).22 E
(const struct option *)135.5 316.8 Q F3(longopts).09 E F2 2.5(,i).27 G
(nt *)-2.5 E F3(longinde).09 E(x)-.2 E F2(\);).53 E F0(Feature T)88
340.8 Q(est Macro Requirements for glibc \(see)-.7 E F2(featur)2.5 E
(e_test_macr)-.18 E(os)-.18 E F0(\(7\)\):)A F2(getopt)108 364.8 Q F0
(\(\): _POSIX_C_SOURCE >= 2 || _XOPEN_SOURCE)A F2(getopt_long)108 376.8
Q F0(\(\),)A F2(getopt_long_only)2.5 E F0(\(\): _GNU_SOURCE)A F1
(DESCRIPTION)72 393.6 Q F0(The)108 405.6 Q F2(getopt)3.085 E F0 .585
(\(\) function parses the command-line ar)B 3.085(guments. Its)-.18 F
(ar)3.085 E(guments)-.18 E F3(ar)3.415 E(gc)-.37 E F0(and)3.395 E F3(ar)
3.415 E(gv)-.37 E F0 .585(are the ar)3.405 F(gument)-.18 E .001
(count and array as passed to the)108 417.6 R F3(main)2.501 E F0 .001
(\(\) function on program in).24 F -.2(vo)-.4 G 2.501(cation. An).2 F
.001(element of)2.501 F F3(ar)2.501 E(gv)-.37 E F0 .002
(that starts with)2.501 F .182(\010\255\010 \(and is not e)108 429.6 R
.182(xactly "\255" or "\255\255"\) is an option element.)-.15 F .181
(The characters of this element \(aside from the ini-)5.181 F 1.373
(tial \010\255\010\) are option characters.)108 441.6 R(If)6.373 E F2
(getopt)3.873 E F0 1.373(\(\) is called repeatedly)B 3.873(,i)-.65 G
3.873(tr)-3.873 G 1.373(eturns successi)-3.873 F -.15(ve)-.25 G 1.373
(ly each of the option).15 F
(characters from each of the option elements.)108 453.6 Q 1.018(The v)
108 470.4 R(ariable)-.25 E F3(optind)3.748 E F0 1.018(is the inde)4.288
F 3.517(xo)-.15 G 3.517(ft)-3.517 G 1.017(he ne)-3.517 F 1.017
(xt element to be processed in)-.15 F F3(ar)3.517 E(gv)-.37 E F0 6.017
(.T).32 G 1.017(he system initializes this)-6.017 F -.25(va)108 482.4 S
.52(lue to 1.).25 F .52
(The caller can reset it to 1 to restart scanning of the same)5.52 F F3
(ar)3.02 E(gv)-.37 E F0 3.02(,o).32 G 3.02(rw)-3.02 G .52
(hen scanning a ne)-3.02 F 3.02(wa)-.25 G -.18(rg)-3.02 G(u-).18 E
(ment v)108 494.4 Q(ector)-.15 E(.)-.55 E(If)108 511.2 Q F2(getopt)2.665
E F0 .165(\(\) \214nds another option character)B 2.665(,i)-.4 G 2.665
(tr)-2.665 G .165(eturns that character)-2.665 F 2.665(,u)-.4 G .164
(pdating the e)-2.665 F .164(xternal v)-.15 F(ariable)-.25 E F3(optind)
2.664 E F0(and)2.664 E 3.565(as)108 523.2 S 1.065(tatic v)-3.565 F
(ariable)-.25 E F3(ne)3.565 E(xtc)-.2 E(har)-.15 E F0 1.065
(so that the ne)3.565 F 1.065(xt call to)-.15 F F2(getopt)3.566 E F0
1.066(\(\) can resume the scan with the follo)B 1.066(wing option)-.25 F
(character or)108 535.2 Q F3(ar)2.5 E(gv)-.37 E F0(-element.)A 1.098
(If there are no more option characters,)108 552 R F2(getopt)3.598 E F0
1.097(\(\) returns \2551.)B(Then)6.097 E F3(optind)3.597 E F0 1.097
(is the inde)3.597 F 3.597(xi)-.15 G(n)-3.597 E F3(ar)3.597 E(gv)-.37 E
F0 1.097(of the \214rst)3.597 F F3(ar)108 564 Q(gv)-.37 E F0
(-element that is not an option.)A F3(optstring)108.23 580.8 Q F0 .38
(is a string containing the le)3.1 F .38(gitimate option characters.)
-.15 F .38(If such a character is follo)5.38 F .38(wed by a colon,)-.25
F .031(the option requires an ar)108 592.8 R .031(gument, so)-.18 F F2
(getopt)2.531 E F0 .031(\(\) places a pointer to the follo)B .03
(wing te)-.25 F .03(xt in the same)-.15 F F3(ar)2.53 E(gv)-.37 E F0
(-element,)A .739(or the te)108 604.8 R .739(xt of the follo)-.15 F
(wing)-.25 E F3(ar)3.239 E(gv)-.37 E F0 .739(-element, in)B F3(optar)
3.239 E(g)-.37 E F0 5.739(.T).22 G .939 -.1(wo c)-6.539 H .74
(olons mean an option tak).1 F .74(es an optional ar)-.1 F .74(g; if)
-.18 F 1.501(there is te)108 616.8 R 1.501(xt in the current)-.15 F F3
(ar)4.001 E(gv)-.37 E F0 1.501(-element \(i.e., in the same w)B 1.5
(ord as the option name itself, for e)-.1 F(xample,)-.15 E("\255oar)108
628.8 Q .96(g"\), then it is returned in)-.18 F F3(optar)3.46 E(g)-.37 E
F0 3.46(,o)C(therwise)-3.46 E F3(optar)3.46 E(g)-.37 E F0 .961
(is set to zero.)3.46 F .961(This is a GNU e)5.961 F 3.461(xtension. If)
-.15 F F3(opt-)3.691 E(string)108 640.8 Q F0(contains)3.772 E F2(W)3.552
E F0(follo)3.552 E 1.052(wed by a semicolon, then)-.25 F F2 1.052
(\255W f)3.552 F(oo)-.25 E F0 1.051(is treated as the long option)3.552
F F2<adad66>3.551 E(oo)-.25 E F0 6.051(.\()C(The)-6.051 E F2<ad57>3.551
E F0 1.501(option is reserv)108 652.8 R 1.501
(ed by POSIX.2 for implementation e)-.15 F 4.001(xtensions.\) This)-.15
F(beha)4.002 E 1.502(vior is a GNU e)-.2 F 1.502(xtension, not)-.15 F
-.2(av)108 664.8 S(ailable with libraries before glibc 2.)-.05 E .78
(By def)108 681.6 R(ault,)-.1 E F2(getopt)3.28 E F0 .78
(\(\) permutes the contents of)B F3(ar)3.28 E(gv)-.37 E F0 .78
(as it scans, so that e)3.28 F -.15(ve)-.25 G .78
(ntually all the nonoptions are at).15 F .198(the end.)108 693.6 R -1
-.8(Tw o)5.198 H .198(other modes are also implemented.)3.498 F .198
(If the \214rst character of)5.198 F F3(optstring)2.699 E F0 .199
(is \010+\010 or the en)2.699 F(vironment)-.4 E -.25(va)108 705.6 S
(riable).25 E F2(POSIXL)3.594 E(Y_CORRECT)-.92 E F0 1.094
(is set, then option processing stops as soon as a nonoption ar)3.594 F
1.093(gument is)-.18 F 3.341(encountered. If)108 717.6 R .841
(the \214rst character of)3.341 F F3(optstring)3.342 E F0 .842
(is \010\255\010, then each nonoption)3.342 F F3(ar)3.342 E(gv)-.37 E F0
.842(-element is handled as if it)B 1.484(were the ar)108 729.6 R 1.484
(gument of an option with character code 1.)-.18 F 1.484
(\(This is used by programs that were written to)6.484 F 186.51
(GNU 2010-11-01)72 768 R(1)205.67 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(GET)72 48 Q 123.64(OPT\(3\) Linux)-.18 F
(Programmer')2.5 E 2.5(sM)-.55 G 123.64(anual GET)-2.5 F(OPT\(3\))-.18 E
-.15(ex)108 84 S .344(pect options and other).15 F/F1 10/Times-Italic@0
SF(ar)2.844 E(gv)-.37 E F0 .344(-elements in an)B 2.844(yo)-.15 G .345
(rder and that care about the ordering of the tw)-2.844 F 2.845
(o.\) The)-.1 F(spe-)2.845 E(cial ar)108 96 Q
(gument "\255\255" forces an end of option-scanning re)-.18 E -.05(ga)
-.15 G(rdless of the scanning mode.).05 E(If)108 112.8 Q/F2 10
/Times-Bold@0 SF(getopt)2.992 E F0 .491
(\(\) does not recognize an option character)B 2.991(,i)-.4 G 2.991(tp)
-2.991 G .491(rints an error message to)-2.991 F F1(stderr)2.991 E F0
2.991(,s)C .491(tores the character)-2.991 F(in)108 124.8 Q F1(optopt)
2.5 E F0 2.5(,a)C(nd returns \010?\010.)-2.5 E
(The calling program may pre)5 E -.15(ve)-.25 G
(nt the error message by setting).15 E F1(opterr)2.5 E F0(to 0.)2.5 E
(If)108 141.6 Q F2(getopt)3.567 E F0 1.068
(\(\) \214nds an option character in)B F1(ar)3.568 E(gv)-.37 E F0 1.068
(that w)3.568 F 1.068(as not included in)-.1 F F1(optstring)3.568 E F0
3.568(,o)C 3.568(ri)-3.568 G 3.568(fi)-3.568 G 3.568(td)-3.568 G 1.068
(etects a missing)-3.568 F .21(option ar)108 153.6 R .21
(gument, it returns \010?\010 and sets the e)-.18 F .209(xternal v)-.15
F(ariable)-.25 E F1(optopt)2.709 E F0 .209
(to the actual option character)2.709 F 5.209(.I)-.55 G 2.709(ft)-5.209
G .209(he \214rst)-2.709 F .008(character \(follo)108 165.6 R .008
(wing an)-.25 F 2.508(yo)-.15 G .009
(ptional \010+\010 or \010\255\010 described abo)-2.508 F -.15(ve)-.15 G
2.509(\)o).15 G(f)-2.509 E F1(optstring)2.509 E F0 .009
(is a colon \(\010:\010\), then)2.509 F F2(getopt)2.509 E F0 .009
(\(\) returns)B .857
(\010:\010 instead of \010?\010 to indicate a missing option ar)108
177.6 R 3.357(gument. If)-.18 F .857(an error w)3.357 F .857
(as detected, and the \214rst character of)-.1 F F1(optstring)108 189.6
Q F0 .111(is not a colon, and the e)2.611 F .112(xternal v)-.15 F
(ariable)-.25 E F1(opterr)2.612 E F0 .112(is nonzero \(which is the def)
2.612 F(ault\),)-.1 E F2(getopt)2.612 E F0 .112(\(\) prints an)B
(error message.)108 201.6 Q F2(getopt_long\(\) and getopt_long_only\(\))
87 218.4 Q F0(The)108 230.4 Q F2(getopt_long)3.519 E F0 1.019
(\(\) function w)B 1.019(orks lik)-.1 F(e)-.1 E F2(getopt)3.519 E F0
1.019(\(\) e)B 1.018
(xcept that it also accepts long options, started with tw)-.15 F(o)-.1 E
3.519(dashes. \(If)108 242.4 R 1.019
(the program accepts only long options, then)3.519 F F1(optstring)3.749
E F0 1.02(should be speci\214ed as an empty string)3.739 F .269
(\(""\), not NULL.\))108 254.4 R .269(Long option names may be abbre)
5.269 F .269(viated if the abbre)-.25 F .269
(viation is unique or is an e)-.25 F .268(xact match)-.15 F
(for some de\214ned option.)108 266.4 Q 2.5(Al)5 G(ong option may tak)
-2.5 E 2.5(eap)-.1 G(arameter)-2.5 E 2.5(,o)-.4 G 2.5(ft)-2.5 G(he form)
-2.5 E F2<adad6172>2.5 E(g=param)-.1 E F0(or)2.5 E F2<adad6172>2.5 E 2.5
(gp)-.1 G(aram)-2.5 E F0(.)A F1(longopts)108.09 283.2 Q F0
(is a pointer to the \214rst element of an array of)2.77 E F1
(struct option)2.84 E F0(declared in)2.74 E F1(<g)2.16 E(etopt.h>)-.1 E
F0(as)2.5 E(struct option {)128 307.2 Q(const char *name;)138 319.2 Q 20
(int has_ar)138 331.2 R(g;)-.18 E 17.5(int *\215ag;)138 343.2 R 20
(int v)138 355.2 R(al;)-.25 E(};)128 367.2 Q(The meanings of the dif)108
384 Q(ferent \214elds are:)-.25 E F1(name)108.36 400.8 Q F0
(is the name of the long option.)144 400.8 Q F1(has_ar)108.31 417.6 Q(g)
-.37 E F0(is:)144 429.6 Q F2(no_ar)2.895 E(gument)-.1 E F0 .395
(\(or 0\) if the option does not tak)2.895 F 2.896(ea)-.1 G 2.896(na)
-2.896 G -.18(rg)-2.896 G(ument;).18 E F2 -.18(re)2.896 G(quir).18 E
(ed_ar)-.18 E(gument)-.1 E F0 .396(\(or 1\) if the)2.896 F 1.147
(option requires an ar)144 441.6 R 1.147(gument; or)-.18 F F2
(optional_ar)3.647 E(gument)-.1 E F0 1.146(\(or 2\) if the option tak)
3.647 F 1.146(es an optional ar)-.1 F(gu-)-.18 E(ment.)144 453.6 Q F1
<8d61>109.91 470.4 Q(g)-.1 E F0 .798(speci\214es ho)144 470.4 R 3.298
(wr)-.25 G .798(esults are returned for a long option.)-3.298 F(If)5.798
E F1<8d61>3.298 E(g)-.1 E F0 .798(is NULL, then)3.298 F F2(getopt_long)
3.298 E F0 .798(\(\) returns)B F1(val)144 482.4 Q F0 5.31(.\()C -.15(Fo)
-5.31 G 2.81(re).15 G .31(xample, the calling program may set)-2.96 F F1
(val)2.809 E F0 .309(to the equi)2.809 F -.25(va)-.25 G .309
(lent short option character).25 F 2.809(.\) Oth-)-.55 F(erwise,)144
494.4 Q F2(getopt_long)3.595 E F0 1.095(\(\) returns 0, and)B F1<8d61>
3.595 E(g)-.1 E F0 1.095(points to a v)3.595 F 1.096
(ariable which is set to)-.25 F F1(val)3.596 E F0 1.096
(if the option is)3.596 F(found, b)144 506.4 Q
(ut left unchanged if the option is not found.)-.2 E F1(val)108 523.2 Q
F0(is the v)144 523.2 Q(alue to return, or to load into the v)-.25 E
(ariable pointed to by)-.25 E F1<8d61>2.5 E(g)-.1 E F0(.)A
(The last element of the array has to be \214lled with zeros.)108 540 Q
(If)108 556.8 Q F1(longinde)2.802 E(x)-.2 E F0 .302
(is not NULL, it points to a v)2.802 F .302
(ariable which is set to the inde)-.25 F 2.802(xo)-.15 G 2.802(ft)-2.802
G .301(he long option relati)-2.802 F .601 -.15(ve t)-.25 H(o).15 E F1
(lon-)2.801 E(gopts)108 568.8 Q F0(.).27 E F2(getopt_long_only)108 585.6
Q F0 .802(\(\) is lik)B(e)-.1 E F2(getopt_long)3.303 E F0 .803(\(\), b)B
.803(ut \010\255\010 as well as "\255\255" can indicate a long option.)
-.2 F .803(If an option)5.803 F .694
(that starts with \010\255\010 \(not "\255\255"\) doesn')108 597.6 R
3.194(tm)-.18 G .693(atch a long option, b)-3.194 F .693
(ut does match a short option, it is parsed as a)-.2 F
(short option instead.)108 609.6 Q/F3 10.95/Times-Bold@0 SF(RETURN V)72
626.4 Q(ALUE)-1.478 E F0 .108(If an option w)108 638.4 R .108
(as successfully found, then)-.1 F F2(getopt)2.608 E F0 .108
(\(\) returns the option character)B 5.108(.I)-.55 G 2.608(fa)-5.108 G
.108(ll command-line options)-2.608 F(ha)108 650.4 Q .74 -.15(ve b)-.2 H
.44(een parsed, then).15 F F2(getopt)2.94 E F0 .44(\(\) returns \2551.)B
(If)5.44 E F2(getopt)2.94 E F0 .44
(\(\) encounters an option character that w)B .44(as not in)-.1 F F1
(opt-)2.94 E(string)108 662.4 Q F0 2.895(,t).22 G .396
(hen \010?\010 is returned.)-2.895 F(If)5.396 E F2(getopt)2.896 E F0
.396(\(\) encounters an option with a missing ar)B .396
(gument, then the return v)-.18 F(alue)-.25 E
(depends on the \214rst character in)108 674.4 Q F1(optstring)2.5 E F0
2.5(:i).22 G 2.5(fi)-2.5 G 2.5(ti)-2.5 G 2.5<7308>-2.5 G
(:\010, then \010:\010 is returned; otherwise \010?\010 is returned.)
-2.5 E F2(getopt_long)108 691.2 Q F0 .715(\(\) and)B F2
(getopt_long_only)3.215 E F0 .715(\(\) also return the option character\
 when a short option is recognized.)B -.15(Fo)108 703.2 S 2.533(ral).15
G .033(ong option, the)-2.533 F 2.533(yr)-.15 G(eturn)-2.533 E F1(val)
2.533 E F0(if)2.533 E F1<8d61>2.533 E(g)-.1 E F0 .033
(is NULL, and 0 otherwise.)2.533 F .033
(Error and \2551 returns are the same as for)5.033 F F2(getopt)108 715.2
Q F0(\(\), plus \010?\010 for an ambiguous match or an e)A
(xtraneous parameter)-.15 E(.)-.55 E 186.51(GNU 2010-11-01)72 768 R(2)
205.67 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(GET)72 48 Q 123.64(OPT\(3\) Linux)-.18 F
(Programmer')2.5 E 2.5(sM)-.55 G 123.64(anual GET)-2.5 F(OPT\(3\))-.18 E
/F1 10.95/Times-Bold@0 SF(ENVIR)72 84 Q(ONMENT)-.329 E/F2 10
/Times-Bold@0 SF(POSIXL)108 96 Q(Y_CORRECT)-.92 E F0
(If this is set, then option processing stops as soon as a nonoption ar)
144 108 Q(gument is encountered.)-.18 E F2(_<PID>_GNU_nonoption_ar)108
124.8 Q(gv_\215ags_)-.1 E F0 .255(This v)144 136.8 R .255(ariable w)-.25
F .255(as used by)-.1 F F2(bash)2.755 E F0 .255
(\(1\) 2.0 to communicate to glibc which ar)B .255
(guments are the results of)-.18 F 1.2(wildcard e)144 148.8 R 1.2
(xpansion and so should not be considered as options.)-.15 F 1.2
(This beha)6.2 F 1.2(vior w)-.2 F 1.2(as remo)-.1 F -.15(ve)-.15 G 3.7
(di).15 G(n)-3.7 E F2(bash)144 160.8 Q F0(\(1\) v)A(ersion 2.01, b)-.15
E(ut the support remains in glibc.)-.2 E F1 -1.04(AT)72 177.6 S(TRIB)
1.04 E(UTES)-.11 E F0 -.15(Fo)108 189.6 S 2.5(ra).15 G 2.5(ne)-2.5 G
(xplanation of the terms used in this section, see)-2.65 E F2(attrib)2.5
E(utes)-.2 E F0(\(7\).)A .4 LW 431.9 198.9 108 198.9 DL F2 93.63
(Interface Attrib)113 208.4 R 27.41(ute V)-.2 F(alue)-.92 E 431.9 212.9
108 212.9 DL F0(Thread safety)248 222.4 Q(MT)15 E
(-Unsafe race:getopt en)-.92 E(v)-.4 E F2(getopt)113 222.4 Q F0(\(\),)A
F2(getopt_long)25.02 E F0(\(\),)A F2(getopt_long_only)113 234.4 Q F0
(\(\))A 431.9 238.9 108 238.9 DL 431.9 198.9 431.9 238.9 DL 108 198.9
108 238.9 DL 310.2 198.9 310.2 238.9 DL 240.5 198.9 240.5 238.9 DL F1
(CONFORMING T)72 251.2 Q(O)-.197 E F2(getopt)108 263.2 Q F0(\(\):)A
1.323(POSIX.2 and POSIX.1-2001, pro)144 275.2 R 1.323(vided the en)-.15
F 1.323(vironment v)-.4 F(ariable)-.25 E F2(POSIXL)3.824 E(Y_CORRECT)
-.92 E F0 1.324(is set.)3.824 F .143(Otherwise, the elements of)144
287.2 R/F3 10/Times-Italic@0 SF(ar)2.643 E(gv)-.37 E F0(aren')2.643 E
2.643(tr)-.18 G .143(eally const, because we permute them.)-2.643 F
1.742 -.8(We p)5.143 H .142(retend the).8 F(y')-.15 E(re)-.5 E
(const in the prototype to be compatible with other systems.)144 299.2 Q
(The use of \010+\010 and \010\255\010 in)144 323.2 Q F3(optstring)2.73
E F0(is a GNU e)2.72 E(xtension.)-.15 E .313
(On some older implementations,)144 347.2 R F2(getopt)2.813 E F0 .313
(\(\) w)B .313(as declared in)-.1 F F3(<stdio.h>)2.813 E F0 5.314(.S)C
.314(USv1 permitted the decla-)-5.314 F .977(ration to appear in either)
144 359.2 R F3(<unistd.h>)3.137 E F0(or)3.477 E F3(<stdio.h>)3.477 E F0
5.977(.P)C .977(OSIX.1-2001 mark)-5.977 F .977(ed the use of)-.1 F F3
(<stdio.h>)3.136 E F0 3.221(for this purpose as LEGA)144 371.2 R(CY)-.4
E 8.221(.P)-1.29 G 3.222(OSIX.1-2001 does not allo)-8.221 F 5.722(wt)
-.25 G 3.222(he declaration to appear in)-5.722 F F3(<stdio.h>)144 383.2
Q F0(.)A F2(getopt_long)108 400 Q F0(\(\) and)A F2(getopt_long_only)2.5
E F0(\(\):)A(These functions are GNU e)144 412 Q(xtensions.)-.15 E F1
(NO)72 428.8 Q(TES)-.438 E F0 3.066(Ap)108 440.8 S .566
(rogram that scans multiple ar)-3.066 F .565(gument v)-.18 F .565
(ectors, or rescans the same v)-.15 F .565(ector more than once, and w)
-.15 F .565(ants to)-.1 F(mak)108 452.8 Q 5.217(eu)-.1 G 2.718
(se of GNU e)-5.217 F 2.718
(xtensions such as \010+\010 and \010\255\010 at the start of)-.15 F F3
(optstring)5.218 E F0 5.218(,o).22 G 5.218(rc)-5.218 G 2.718
(hanges the v)-5.218 F 2.718(alue of)-.25 F F2(POSIXL)108 464.8 Q
(Y_CORRECT)-.92 E F0 .686(between scans, must reinitialize)3.186 F F2
(getopt)3.186 E F0 .685(\(\) by resetting)B F3(optind)3.415 E F0 .685
(to 0, rather than the)3.955 F .112(traditional v)108 476.8 R .112
(alue of 1.)-.25 F .112(\(Resetting to 0 forces the in)5.112 F -.2(vo)
-.4 G .113(cation of an internal initialization routine that rechecks).2
F F2(POSIXL)108 488.8 Q(Y_CORRECT)-.92 E F0(and checks for GNU e)2.5 E
(xtensions in)-.15 E F3(optstring)2.5 E F0(.\)).22 E F1 -.11(BU)72 505.6
S(GS).11 E F0 .507(The POSIX.2 speci\214cation of)108 517.6 R F2(getopt)
3.007 E F0 .506
(\(\) has a technical error described in POSIX.2 Interpretation 150.)B
(The)5.506 E .142(GNU implementation \(and probably all other implement\
ations\) implements the correct beha)108 529.6 R .143(vior rather than)
-.2 F(that speci\214ed.)108 541.6 Q F1(EXAMPLE)72 558.4 Q F0 .869
(The follo)108 570.4 R .869(wing tri)-.25 F .869(vial e)-.25 F .869
(xample program uses)-.15 F F2(getopt)3.369 E F0 .869(\(\) to handle tw)
B 3.369(op)-.1 G .868(rogram options:)-3.369 F F3<ad6e>3.368 E F0 3.368
(,w).24 G .868(ith no associ-)-3.368 F(ated v)108 582.4 Q(alue; and)-.25
E F3(\255t val)2.5 E F0 2.5(,w).51 G(hich e)-2.5 E
(xpects an associated v)-.15 E(alue.)-.25 E(#include <unistd.h>)108
606.4 Q(#include <stdlib)108 618.4 Q(.h>)-.4 E(#include <stdio.h>)108
630.4 Q(int)108 654.4 Q(main\(int ar)108 666.4 Q(gc, char *ar)-.18 E
(gv[]\))-.18 E({)108 678.4 Q(int \215ags, opt;)118 690.4 Q
(int nsecs, tfnd;)118 702.4 Q(nsecs = 0;)118 726.4 Q 186.51
(GNU 2010-11-01)72 768 R(3)205.67 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(GET)72 48 Q 123.64(OPT\(3\) Linux)-.18 F
(Programmer')2.5 E 2.5(sM)-.55 G 123.64(anual GET)-2.5 F(OPT\(3\))-.18 E
(tfnd = 0;)118 84 Q(\215ags = 0;)118 96 Q(while \(\(opt = getopt\(ar)118
108 Q(gc, ar)-.18 E(gv)-.18 E 2.5(,")-.65 G(nt:"\)\) != \2551\) {)-2.5 E
(switch \(opt\) {)128 120 Q(case \010n\010:)128 132 Q(\215ags = 1;)138
144 Q(break;)138 156 Q(case \010t\010:)128 168 Q(nsecs = atoi\(optar)138
180 Q(g\);)-.18 E(tfnd = 1;)138 192 Q(break;)138 204 Q(def)128 216 Q
(ault: /* \010?\010 */)-.1 E(fprintf\(stderr)138 228 Q 2.5(,")-.4 G
(Usage: %s [\255t nsecs] [\255n] name\\n",)-2.5 E(ar)158 240 Q(gv[0]\);)
-.18 E -.15(ex)138 252 S(it\(EXIT_F).15 E(AILURE\);)-.74 E(})128 264 Q
(})118 276 Q
(printf\("\215ags=%d; tfnd=%d; optind=%d\\n", \215ags, tfnd, optind\);)
118 300 Q(if \(optind >= ar)118 324 Q(gc\) {)-.18 E(fprintf\(stderr)128
336 Q 2.5(,")-.4 G(Expected ar)-2.5 E(gument after options\\n"\);)-.18 E
-.15(ex)128 348 S(it\(EXIT_F).15 E(AILURE\);)-.74 E(})118 360 Q
(printf\("name ar)118 384 Q(gument = %s\\n", ar)-.18 E(gv[optind]\);)
-.18 E(/* Other code omitted */)118 408 Q -.15(ex)118 432 S
(it\(EXIT_SUCCESS\);).15 E(})108 444 Q(The follo)108 460.8 Q(wing e)-.25
E(xample program illustrates the use of)-.15 E/F1 10/Times-Bold@0 SF
(getopt_long)2.5 E F0(\(\) with most of its features.)A
(#include <stdio.h>)108 484.8 Q(/* for printf */)12.5 E
(#include <stdlib)108 496.8 Q 7.5(.h> /*)-.4 F(for e)2.5 E(xit */)-.15 E
(#include <getopt.h>)108 508.8 Q(int)108 532.8 Q(main\(int ar)108 544.8
Q(gc, char **ar)-.18 E(gv\))-.18 E({)108 556.8 Q(int c;)118 568.8 Q
(int digit_optind = 0;)118 580.8 Q(while \(1\) {)118 604.8 Q
(int this_option_optind = optind ? optind : 1;)128 616.8 Q
(int option_inde)128 628.8 Q 2.5(x=0)-.15 G(;)-2.5 E
(static struct option long_options[] = {)128 640.8 Q 10
({"add", required_ar)138 652.8 R(gument, 0,)-.18 E 2.5(0})5 G(,)-2.5 E
2.5({"append", no_ar)138 664.8 R 15(gument, 0,)-.18 F 2.5(0})5 G(,)-2.5
E 2.5({"delete", required_ar)138 676.8 R(gument, 0,)-.18 E 2.5(0})5 G(,)
-2.5 E({"v)138 688.8 Q(erbose", no_ar)-.15 E 15(gument, 0,)-.18 F 2.5
(0})5 G(,)-2.5 E 2.5({"create", required_ar)138 700.8 R
(gument, 0, \010c\010},)-.18 E 7.5({"\214le", required_ar)138 712.8 R
(gument, 0,)-.18 E 2.5(0})5 G(,)-2.5 E 20({0, 0,)138 724.8 R 2.5(0, 0)
42.5 F(})2.5 E 186.51(GNU 2010-11-01)72 768 R(4)205.67 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(GET)72 48 Q 123.64(OPT\(3\) Linux)-.18 F
(Programmer')2.5 E 2.5(sM)-.55 G 123.64(anual GET)-2.5 F(OPT\(3\))-.18 E
(};)128 84 Q 2.5(c=g)128 108 S(etopt_long\(ar)-2.5 E(gc, ar)-.18 E(gv)
-.18 E 2.5(,")-.65 G(abc:d:012",)-2.5 E(long_options, &option_inde)150.5
120 Q(x\);)-.15 E(if \(c == \2551\))128 132 Q(break;)138 144 Q
(switch \(c\) {)128 168 Q(case 0:)128 180 Q
(printf\("option %s", long_options[option_inde)138 192 Q(x].name\);)-.15
E(if \(optar)138 204 Q(g\))-.18 E(printf\(" with ar)148 216 Q 2.5(g%)
-.18 G(s", optar)-2.5 E(g\);)-.18 E(printf\("\\n"\);)138 228 Q(break;)
138 240 Q(case \0100\010:)128 264 Q(case \0101\010:)128 276 Q
(case \0102\010:)128 288 Q
(if \(digit_optind != 0 && digit_optind != this_option_optind\))138 300
Q(printf\("digits occur in tw)143 312 Q 2.5(od)-.1 G(if)-2.5 E
(ferent ar)-.25 E(gv\255elements.\\n"\);)-.18 E
(digit_optind = this_option_optind;)138 324 Q
(printf\("option %c\\n", c\);)138 336 Q(break;)138 348 Q
(case \010a\010:)128 372 Q(printf\("option a\\n"\);)138 384 Q(break;)138
396 Q(case \010b\010:)128 420 Q(printf\("option b\\n"\);)138 432 Q
(break;)138 444 Q(case \010c\010:)128 468 Q(printf\("option c with v)138
480 Q(alue \010%s\010\\n", optar)-.25 E(g\);)-.18 E(break;)138 492 Q
(case \010d\010:)128 516 Q(printf\("option d with v)138 528 Q
(alue \010%s\010\\n", optar)-.25 E(g\);)-.18 E(break;)138 540 Q
(case \010?\010:)128 564 Q(break;)138 576 Q(def)128 600 Q(ault:)-.1 E
(printf\("?? getopt returned character code 0%o ??\\n", c\);)138 612 Q
(})128 624 Q(})118 636 Q(if \(optind < ar)118 660 Q(gc\) {)-.18 E
(printf\("non\255option ARGV\255elements: "\);)128 672 Q
(while \(optind < ar)128 684 Q(gc\))-.18 E(printf\("%s ", ar)138 696 Q
(gv[optind++]\);)-.18 E(printf\("\\n"\);)128 708 Q(})118 720 Q 186.51
(GNU 2010-11-01)72 768 R(5)205.67 E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(GET)72 48 Q 123.64(OPT\(3\) Linux)-.18 F
(Programmer')2.5 E 2.5(sM)-.55 G 123.64(anual GET)-2.5 F(OPT\(3\))-.18 E
-.15(ex)118 84 S(it\(EXIT_SUCCESS\);).15 E(})108 96 Q/F1 10.95
/Times-Bold@0 SF(SEE ALSO)72 112.8 Q/F2 10/Times-Bold@0 SF(getsubopt)108
124.8 Q F0(\(3\))A F1(COLOPHON)72 141.6 Q F0 .06
(This page is part of release 3.53 of the Linux)108 153.6 R/F3 10
/Times-Italic@0 SF(man-pa)2.94 E -.1(ge)-.1 G(s).1 E F0 2.56(project. A)
2.83 F .06(description of the project, and informa-)2.56 F
(tion about reporting b)108 165.6 Q(ugs, can be found at http://www)-.2
E(.k)-.65 E(ernel.or)-.1 E(g/doc/man\255pages/.)-.18 E 186.51
(GNU 2010-11-01)72 768 R(6)205.67 E 0 Cg EP
%%Trailer
end
%%EOF
